{"version":3,"sources":["hooks/useFetch.js","components/App/AppLogic.js","components/BookSelect/BookOptions/BookOptions.jsx","components/BookSelect/BookSelect.jsx","components/VOTD/VOTD.jsx","components/Header/Header.jsx","components/ScriptureView/ScriptureViewLogic.js","components/ScriptureView/ScriptureView.jsx","components/App/App.jsx","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortFetchControl","AbortController","a","fetch","signal","response","ok","Error","statusText","json","message","abort","AppLogic","API_KEY","bookListUrl","bookList","displayedBookData","setDisplayedBookData","genesis","books","currentChapter","name","passage","bookIndex","chaptersCount","chapters","length","bibleId","BookOptions","getSelectOptionChapters","useContext","PassageClickContext","isSelectNameClicked","setIsSelectNameClicked","isSelectChapterClicked","setIsSelectChapterClicked","range","current","setIsPassagePending","PassagePendingContext","BookDataContext","selectBookOption","setSelectBookOption","isAnyControlClicked","className","map","book","index","onClick","event","target","classList","contains","dataset","chapterCount","chapter","newBook","forEach","parseInt","createContext","BookSelect","ButtonClickCheckersContext","showVOTD","setShowVOTD","currentValue","Provider","value","VOTD","votd","bookname","verse","dangerouslySetInnerHTML","__html","text","Header","ScriptureViewLogic","currentViewingPassageWrapper","isPassagePending","currentBookName","scrollTop","scriptureView","nextPassage","prevPassage","passageToShow","handlePassageChange","bookLen","ScriptureView","useRef","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf3537f9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState();\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const abortFetchControl = new AbortController();\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(url, { signal: abortFetchControl.signal });\r\n        if (!response.ok) throw new Error(response.statusText);\r\n        let data = null;\r\n        data = await response.json();\r\n        setData(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setIsPending(false);\r\n      }\r\n    })();\r\n    return () => {\r\n      abortFetchControl.abort();\r\n    };\r\n  }, [url]);\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useEffect, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst AppLogic = () => {\r\n  const API_KEY = 'fd37d8f28e95d3be8cb4fbc37e15e18e';\r\n  const bibleId = 'LEB';\r\n  const bookListUrl = `https://api.biblia.com/v1/bible/contents/${bibleId}?key=${API_KEY}`;\r\n\r\n  const { data: bookList } = useFetch(bookListUrl);\r\n  const [displayedBookData, setDisplayedBookData] = useState();\r\n\r\n  useEffect(() => {\r\n    // sets the initial book to Genesis onload\r\n    const index = 0;\r\n    if (!bookList) return;\r\n    const { books } = bookList;\r\n    const genesis = books[index];\r\n\r\n    setDisplayedBookData({\r\n      currentChapter: 1,\r\n      name: genesis.passage,\r\n      bookIndex: index,\r\n      chaptersCount: genesis.chapters.length,\r\n    });\r\n  }, [bookList]);\r\n\r\n  return {\r\n    displayedBookData,\r\n    setDisplayedBookData,\r\n    bookList,\r\n    API_KEY,\r\n    bibleId,\r\n  };\r\n};\r\n\r\nexport default AppLogic;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { BookDataContext, PassagePendingContext } from '../../App/App';\r\nimport { PassageClickContext } from '../BookSelect';\r\n\r\nconst BookOptions = () => {\r\n  const {\r\n    isSelectNameClicked,\r\n    setIsSelectNameClicked,\r\n    isSelectChapterClicked,\r\n    setIsSelectChapterClicked,\r\n  } = useContext(PassageClickContext);\r\n\r\n  function* getSelectOptionChapters(range) {\r\n    for (let current = 1; current <= range; current++) yield current;\r\n  }\r\n\r\n  const { setIsPassagePending } = useContext(PassagePendingContext);\r\n  const { bookList, displayedBookData, setDisplayedBookData } =\r\n    useContext(BookDataContext);\r\n  const { books } = bookList;\r\n  const [selectBookOption, setSelectBookOption] = useState();\r\n\r\n  useEffect(() => {\r\n    setSelectBookOption({\r\n      name: displayedBookData.name,\r\n      chaptersCount: displayedBookData.chaptersCount,\r\n    });\r\n  }, [displayedBookData]);\r\n\r\n  const isAnyControlClicked = isSelectNameClicked || isSelectChapterClicked;\r\n\r\n  return (\r\n    <>\r\n      {isAnyControlClicked && (\r\n        <div className='book-select__options'>\r\n          <div className='book-select__name-options no-visible-scrollbar'>\r\n            {books?.map((book, index) => {\r\n              return (\r\n                <div\r\n                  className={`btn ${\r\n                    book.passage === selectBookOption.name ? 'btn--active' : ''\r\n                  } book-select__name-option`}\r\n                  key={index}\r\n                  data-name={book.passage}\r\n                  data-chapter-count={book.chapters.length}\r\n                  onClick={(event) => {\r\n                    const target = event.target;\r\n                    if (target.classList.contains('book-select__name-option'))\r\n                      setSelectBookOption?.({\r\n                        name: target.dataset.name,\r\n                        chaptersCount: target.dataset.chapterCount,\r\n                      });\r\n                    setIsSelectChapterClicked(true);\r\n                  }}\r\n                >\r\n                  {book.passage}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className='book-select__chapter-options no-visible-scrollbar'>\r\n            {isSelectChapterClicked &&\r\n              [...getSelectOptionChapters(selectBookOption.chaptersCount)].map(\r\n                (chapter) => {\r\n                  return (\r\n                    <div\r\n                      className='btn book-select__chapter-option'\r\n                      key={chapter}\r\n                      data-chapter={chapter}\r\n                      onClick={(event) => {\r\n                        let target = event.target;\r\n                        let newBook = {};\r\n                        bookList.books.forEach((book, index) => {\r\n                          if (book.passage === selectBookOption.name) {\r\n                            newBook = {\r\n                              currentChapter: parseInt(target.dataset.chapter),\r\n                              name: book.passage,\r\n                              bookIndex: index,\r\n                              chaptersCount: book.chapters.length,\r\n                            };\r\n                            return true;\r\n                          }\r\n                        });\r\n                        setDisplayedBookData(newBook);\r\n                        setIsPassagePending(true);\r\n                        setIsSelectNameClicked(false);\r\n                        setIsSelectChapterClicked(false);\r\n                      }}\r\n                    >\r\n                      {chapter}\r\n                    </div>\r\n                  );\r\n                },\r\n              )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookOptions;\r\n","import { createContext, useContext, useState } from 'react';\r\nimport { BookDataContext } from '../App/App';\r\nimport { ButtonClickCheckersContext } from '../Header/Header';\r\nimport BookOptions from './BookOptions/BookOptions';\r\n\r\nexport const PassageClickContext = createContext();\r\n\r\nconst BookSelect = () => {\r\n  const { displayedBookData } = useContext(BookDataContext);\r\n\r\n  const {\r\n    showVOTD,\r\n    setShowVOTD,\r\n    isSelectNameClicked,\r\n    setIsSelectNameClicked,\r\n    isSelectChapterClicked,\r\n    setIsSelectChapterClicked,\r\n  } = useContext(ButtonClickCheckersContext);\r\n\r\n  return (\r\n    <div\r\n      className='book-select'\r\n      onClick={() => {\r\n        showVOTD && setShowVOTD(false);\r\n      }}\r\n    >\r\n      <div className='book-select__controls'>\r\n        <div\r\n          className={`book-select__name-control btn ${\r\n            isSelectNameClicked ? 'btn--active' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setIsSelectNameClicked((currentValue) => !currentValue);\r\n          }}\r\n        >\r\n          {displayedBookData && displayedBookData.name}\r\n        </div>\r\n        <div\r\n          className={`book-select__chapter-control btn ${\r\n            isSelectChapterClicked ? 'btn--active' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setIsSelectChapterClicked((currentValue) => !currentValue);\r\n          }}\r\n        >\r\n          {displayedBookData && displayedBookData.currentChapter}\r\n        </div>\r\n      </div>\r\n      <PassageClickContext.Provider\r\n        value={{\r\n          isSelectNameClicked,\r\n          setIsSelectNameClicked,\r\n          isSelectChapterClicked,\r\n          setIsSelectChapterClicked,\r\n        }}\r\n      >\r\n        <BookOptions />\r\n      </PassageClickContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookSelect;\r\n","import { useContext } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { ButtonClickCheckersContext } from '../Header/Header';\r\n\r\nconst VOTD = () => {\r\n  const url =\r\n    'https://labs.bible.org/api/?passage=votd&type=json&formatting=para';\r\n  const { data: votd } = useFetch(url);\r\n\r\n  const {\r\n    showVOTD,\r\n    setShowVOTD,\r\n    isSelectNameClicked,\r\n    isSelectChapterClicked,\r\n    setIsSelectNameClicked,\r\n    setIsSelectChapterClicked,\r\n  } = useContext(ButtonClickCheckersContext);\r\n\r\n  return (\r\n    <div className={`votd ${showVOTD && 'btn--active'}`}>\r\n      <div\r\n        className='votd__control btn'\r\n        onClick={() => {\r\n          setShowVOTD((currentValue) => !currentValue);\r\n          if (isSelectNameClicked || isSelectChapterClicked) {\r\n            setIsSelectNameClicked(false);\r\n            setIsSelectChapterClicked(false);\r\n          }\r\n        }}\r\n      >\r\n        VOTD\r\n      </div>\r\n      {votd && (\r\n        <div\r\n          className={`votd__content no-visible-scrollbar ${\r\n            !showVOTD && 'no-height'\r\n          }`}\r\n        >\r\n          <h2 className='votd__header'>Verse(s) Of The Day</h2>\r\n          <ul className='votd__textlist'>\r\n            {votd &&\r\n              votd.map((passage, index) => {\r\n                return (\r\n                  <li className='votd__text' key={index}>\r\n                    <div className='votd__passage' key={index}>\r\n                      <span>{passage.bookname}</span>\r\n                      <span>{passage.chapter}:</span>\r\n                      <span>{passage.verse}</span>\r\n                    </div>\r\n                    <div\r\n                      className='votd__passage-msg'\r\n                      dangerouslySetInnerHTML={{ __html: passage.text }}\r\n                    ></div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      )}{' '}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VOTD;\r\n","import BookSelect from '../BookSelect/BookSelect';\r\nimport VOTD from '../VOTD/VOTD';\r\nimport { createContext, useState } from 'react';\r\n\r\nexport const ButtonClickCheckersContext = createContext();\r\n\r\nconst Header = () => {\r\n  const [isSelectNameClicked, setIsSelectNameClicked] = useState(false);\r\n  const [isSelectChapterClicked, setIsSelectChapterClicked] = useState(false);\r\n  const [showVOTD, setShowVOTD] = useState(false);\r\n\r\n  return (\r\n    <div className='header'>\r\n      <ButtonClickCheckersContext.Provider\r\n        value={{\r\n          isSelectNameClicked,\r\n          setIsSelectNameClicked,\r\n          isSelectChapterClicked,\r\n          setIsSelectChapterClicked,\r\n          showVOTD,\r\n          setShowVOTD,\r\n        }}\r\n      >\r\n        <BookSelect />\r\n        <div>\r\n          <VOTD />\r\n        </div>\r\n      </ButtonClickCheckersContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useContext, useEffect } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { BookDataContext } from '../App/App';\r\nimport { PassagePendingContext } from '../App/App';\r\n\r\nconst ScriptureViewLogic = (currentViewingPassageWrapper) => {\r\n  const { isPassagePending, setIsPassagePending } = useContext(\r\n    PassagePendingContext,\r\n  );\r\n\r\n  const {\r\n    bookList,\r\n    displayedBookData,\r\n    setDisplayedBookData,\r\n    API_KEY,\r\n    bibleId,\r\n  } = useContext(BookDataContext);\r\n\r\n  const {\r\n    name: currentBookName,\r\n    currentChapter,\r\n    chaptersCount,\r\n  } = displayedBookData;\r\n\r\n  const scrollTop = (scriptureView) => {\r\n    scriptureView.scrollTop = 0;\r\n  };\r\n\r\n  const handlePassageChange = (event) => {\r\n    let { bookIndex } = displayedBookData;\r\n    let bookLen = bookList.length;\r\n    const target = event.target;\r\n\r\n    if (!target.classList.contains('view-direction')) return false;\r\n\r\n    setIsPassagePending(true);\r\n\r\n    if (target.classList.contains('next')) {\r\n      if (bookIndex === bookLen - 1 && currentChapter === chaptersCount) {\r\n        return setIsPassagePending(false);\r\n      }\r\n      nextPassage(displayedBookData, bookList.books);\r\n    } else if (target.classList.contains('prev')) {\r\n      if (bookIndex === 0 && currentChapter === 1) {\r\n        return setIsPassagePending(false);\r\n      }\r\n      prevPassage(displayedBookData, bookList.books);\r\n    }\r\n  };\r\n\r\n  const nextPassage = (displayedBookData, books) => {\r\n    let { bookIndex } = displayedBookData;\r\n    let newBook = { ...displayedBookData };\r\n\r\n    if (currentChapter < chaptersCount) {\r\n      newBook = { ...newBook, currentChapter: currentChapter + 1 };\r\n    } else if (bookIndex < books.length - 1) {\r\n      newBook = {\r\n        ...newBook,\r\n        bookIndex: bookIndex + 1,\r\n        name: books[bookIndex + 1].passage,\r\n        currentChapter: 1,\r\n        chaptersCount: books[bookIndex + 1].chapters.length,\r\n      };\r\n    }\r\n    setDisplayedBookData(newBook);\r\n  };\r\n\r\n  const prevPassage = (displayedBookData, books) => {\r\n    let { bookIndex } = displayedBookData;\r\n    let newBook = { ...displayedBookData };\r\n\r\n    if (currentChapter > 1) {\r\n      newBook = { ...newBook, currentChapter: currentChapter - 1 };\r\n    } else if (bookIndex > 0) {\r\n      newBook = {\r\n        ...newBook,\r\n        bookIndex: bookIndex - 1,\r\n        name: books[bookIndex - 1].passage,\r\n        currentChapter: books[bookIndex - 1].chapters.length,\r\n        chaptersCount: books[bookIndex - 1].chapters.length,\r\n      };\r\n    }\r\n    setDisplayedBookData(newBook);\r\n  };\r\n\r\n  const url = `https://api.biblia.com/v1/bible/content/${bibleId}.html.json?passage=${currentBookName}${currentChapter}&style=fullyFormatted&key=${API_KEY}`;\r\n  const { data: passageToShow, isPending } = useFetch(url);\r\n\r\n  useEffect(() => {\r\n    if (!passageToShow) return;\r\n    setIsPassagePending(false);\r\n\r\n    if (!currentViewingPassageWrapper.current) return;\r\n    scrollTop(currentViewingPassageWrapper.current);\r\n  }, [passageToShow]);\r\n\r\n  return {\r\n    passageToShow,\r\n    isPending,\r\n    nextPassage,\r\n    prevPassage,\r\n    scrollTop,\r\n    displayedBookData,\r\n    isPassagePending,\r\n    setIsPassagePending,\r\n    handlePassageChange,\r\n  };\r\n};\r\n\r\nexport default ScriptureViewLogic;\r\n","import { useRef } from 'react';\r\nimport ScriptureViewLogic from './ScriptureViewLogic';\r\n\r\nconst ScriptureView = () => {\r\n  const currentViewingPassageWrapper = useRef();\r\n\r\n  const { passageToShow, handlePassageChange } = ScriptureViewLogic(\r\n    currentViewingPassageWrapper,\r\n  );\r\n\r\n  return (\r\n    <div className='scripture-view' onClick={handlePassageChange}>\r\n      <div className='view-direction prev btn'>PREV</div>\r\n      {passageToShow && (\r\n        <div\r\n          className='viewing-passage no-visible-scrollbar'\r\n          ref={currentViewingPassageWrapper}\r\n          dangerouslySetInnerHTML={{ __html: passageToShow.text }}\r\n        ></div>\r\n      )}\r\n      <div className='view-direction next btn'>NEXT</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScriptureView;\r\n","import { createContext, useState } from 'react';\r\nimport AppLogic from './AppLogic';\r\nimport Header from '../Header/Header';\r\nimport ScriptureView from '../ScriptureView/ScriptureView';\r\nimport '../../css/App.css';\r\n\r\nexport const BookDataContext = createContext();\r\nexport const PassagePendingContext = createContext();\r\n\r\nconst App = () => {\r\n  const [isPassagePending, setIsPassagePending] = useState(true);\r\n  const {\r\n    displayedBookData,\r\n    setDisplayedBookData,\r\n    bookList,\r\n    API_KEY,\r\n    bibleId,\r\n  } = AppLogic();\r\n\r\n  return (\r\n    <>\r\n      {displayedBookData && bookList && (\r\n        <PassagePendingContext.Provider\r\n          value={{ isPassagePending, setIsPassagePending }}\r\n        >\r\n          <BookDataContext.Provider\r\n            value={{\r\n              displayedBookData,\r\n              setDisplayedBookData,\r\n              bookList,\r\n              API_KEY,\r\n              bibleId,\r\n            }}\r\n          >\r\n            <Header />\r\n            <ScriptureView />\r\n          </BookDataContext.Provider>\r\n        </PassagePendingContext.Provider>\r\n      )}\r\n      {isPassagePending && <div className='pending'></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}