{"version":3,"sources":["hooks/useFetch.js","components/App/AppLogic.js","components/BookSelect/BookOptions/BookOptions.jsx","components/BookSelect/BookSelect.jsx","components/VOTD/VOTD.jsx","components/Header/Header.jsx","components/ScriptureView/ScriptureViewLogic.js","components/ScriptureView/ScriptureView.jsx","components/App/App.jsx","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortFetchControl","AbortController","a","fetch","signal","response","ok","Error","statusText","json","message","abort","AppLogic","API_KEY","bookListUrl","bookList","displayedBookData","setDisplayedBookData","genesis","books","currentChapter","name","passage","bookIndex","chaptersCount","chapters","length","bibleId","BookOptions","getSelectOptionChapters","range","current","useContext","OptionClickContext","isShowOptionsClicked","setIsShowOptionsClicked","setIsPassagePending","PassagePendingContext","BookDataContext","selectBookOption","setSelectBookOption","className","map","book","index","onClick","event","target","classList","contains","dataset","chapterCount","chapter","newBook","forEach","parseInt","BookSelect","setShowVOTD","currentValue","VOTD","votd","showVOTD","bookname","verse","dangerouslySetInnerHTML","__html","text","createContext","Header","Provider","value","ScriptureViewLogic","currentViewingPassageWrapper","isPassagePending","currentBookName","scrollTop","scriptureView","nextPassage","prevPassage","passageToShow","handlePassageChange","ScriptureView","useRef","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6211e6cd.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState();\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const abortFetchControl = new AbortController();\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(url, { signal: abortFetchControl.signal });\r\n        if (!response.ok) throw new Error(response.statusText);\r\n        let data = null;\r\n        data = await response.json();\r\n        setData(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setIsPending(false);\r\n      }\r\n    })();\r\n    return () => {\r\n      abortFetchControl.abort();\r\n    };\r\n  }, [url]);\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useEffect, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst AppLogic = () => {\r\n  const API_KEY = 'fd37d8f28e95d3be8cb4fbc37e15e18e';\r\n  const bibleId = 'LEB';\r\n  const bookListUrl = `https://api.biblia.com/v1/bible/contents/${bibleId}?key=${API_KEY}`;\r\n\r\n  const { data: bookList } = useFetch(bookListUrl);\r\n  const [displayedBookData, setDisplayedBookData] = useState();\r\n\r\n  useEffect(() => {\r\n    // sets the initial book to Genesis onload\r\n    const index = 0;\r\n    if (!bookList) return;\r\n    const { books } = bookList;\r\n    const genesis = books[index];\r\n\r\n    setDisplayedBookData({\r\n      currentChapter: 1,\r\n      name: genesis.passage,\r\n      bookIndex: index,\r\n      chaptersCount: genesis.chapters.length,\r\n    });\r\n  }, [bookList]);\r\n\r\n  return {\r\n    displayedBookData,\r\n    setDisplayedBookData,\r\n    books: bookList?.books,\r\n    API_KEY,\r\n    bibleId,\r\n  };\r\n};\r\n\r\nexport default AppLogic;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { BookDataContext, PassagePendingContext } from '../../App/App';\r\nimport { OptionClickContext } from '../../Header/Header';\r\n\r\nconst BookOptions = () => {\r\n  function* getSelectOptionChapters(range) {\r\n    for (let current = 1; current <= range; current++) yield current;\r\n  }\r\n\r\n  const { isShowOptionsClicked, setIsShowOptionsClicked } =\r\n    useContext(OptionClickContext);\r\n  const { setIsPassagePending } = useContext(PassagePendingContext);\r\n  const { books, displayedBookData, setDisplayedBookData } =\r\n    useContext(BookDataContext);\r\n  const [selectBookOption, setSelectBookOption] = useState();\r\n\r\n  useEffect(() => {\r\n    setSelectBookOption({\r\n      name: displayedBookData.name,\r\n      chaptersCount: displayedBookData.chaptersCount,\r\n    });\r\n  }, [displayedBookData]);\r\n\r\n  return (\r\n    <>\r\n      {isShowOptionsClicked && (\r\n        <div className='book-select__options'>\r\n          <div className='book-select__name-options no-visible-scrollbar'>\r\n            {books?.map((book, index) => {\r\n              return (\r\n                <div\r\n                  className={`btn ${\r\n                    book.passage === selectBookOption.name ? 'btn--active' : ''\r\n                  } book-select__name-option`}\r\n                  key={index}\r\n                  data-name={book.passage}\r\n                  data-chapter-count={book.chapters.length}\r\n                  onClick={(event) => {\r\n                    const target = event.target;\r\n                    if (target.classList.contains('book-select__name-option'))\r\n                      setSelectBookOption?.({\r\n                        name: target.dataset.name,\r\n                        chaptersCount: target.dataset.chapterCount,\r\n                      });\r\n                  }}\r\n                >\r\n                  {book.passage}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className='book-select__chapter-options no-visible-scrollbar'>\r\n            {[...getSelectOptionChapters(selectBookOption.chaptersCount)].map(\r\n              (chapter) => {\r\n                return (\r\n                  <div\r\n                    className='btn book-select__chapter-option'\r\n                    key={chapter}\r\n                    data-chapter={chapter}\r\n                    onClick={(event) => {\r\n                      let target = event.target;\r\n                      let newBook = {};\r\n                      books.forEach((book, index) => {\r\n                        if (book.passage === selectBookOption.name) {\r\n                          newBook = {\r\n                            currentChapter: parseInt(target.dataset.chapter),\r\n                            name: book.passage,\r\n                            bookIndex: index,\r\n                            chaptersCount: book.chapters.length,\r\n                          };\r\n                          return true;\r\n                        }\r\n                      });\r\n                      setDisplayedBookData(newBook);\r\n                      setIsPassagePending(true);\r\n                      setIsShowOptionsClicked(false);\r\n                    }}\r\n                  >\r\n                    {chapter}\r\n                  </div>\r\n                );\r\n              },\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookOptions;\r\n","import { useContext } from 'react';\r\nimport { BookDataContext } from '../App/App';\r\nimport { OptionClickContext } from '../Header/Header';\r\nimport BookOptions from './BookOptions/BookOptions';\r\n\r\nconst BookSelect = () => {\r\n  const { displayedBookData } = useContext(BookDataContext);\r\n\r\n  const { setShowVOTD, isShowOptionsClicked, setIsShowOptionsClicked } =\r\n    useContext(OptionClickContext);\r\n\r\n  return (\r\n    <div className='book-select'>\r\n      <div className='book-select__controls'>\r\n        <div\r\n          className={`book-select__name-control btn ${\r\n            isShowOptionsClicked ? 'btn--active' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setShowVOTD(false);\r\n            setIsShowOptionsClicked((currentValue) => !currentValue);\r\n          }}\r\n        >\r\n          {displayedBookData?.name}\r\n        </div>\r\n        <div className='book-select__chapter-control'>\r\n          {displayedBookData?.currentChapter}\r\n        </div>\r\n      </div>\r\n      <BookOptions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookSelect;\r\n","import { useContext, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { OptionClickContext } from '../Header/Header';\r\n\r\nconst VOTD = () => {\r\n  const url =\r\n    'https://labs.bible.org/api/?passage=votd&type=json&formatting=para';\r\n  const { data: votd } = useFetch(url);\r\n\r\n  const { showVOTD, setShowVOTD, setIsShowOptionsClicked } =\r\n    useContext(OptionClickContext);\r\n\r\n  return (\r\n    <div className={`votd ${showVOTD && 'btn--active'}`}>\r\n      <div\r\n        className='votd__control btn'\r\n        onClick={() => {\r\n          setIsShowOptionsClicked(false);\r\n          setShowVOTD((currentValue) => !currentValue);\r\n        }}\r\n      >\r\n        VOTD\r\n      </div>\r\n      {votd && showVOTD && (\r\n        <div className={'votd__content no-visible-scrollbar'}>\r\n          <h2 className='votd__header'>Verse(s) Of The Day</h2>\r\n          <ul className='votd__textlist'>\r\n            {votd.map((passage, index) => {\r\n              return (\r\n                <li className='votd__text' key={index}>\r\n                  <div className='votd__passage' key={index}>\r\n                    <span>{passage.bookname}</span>\r\n                    <span>{passage.chapter}:</span>\r\n                    <span>{passage.verse}</span>\r\n                  </div>\r\n                  <div\r\n                    className='votd__passage-msg'\r\n                    dangerouslySetInnerHTML={{ __html: passage.text }}\r\n                  ></div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VOTD;\r\n","import { createContext, useState } from 'react';\r\nimport BookSelect from '../BookSelect/BookSelect';\r\nimport VOTD from '../VOTD/VOTD';\r\n\r\nexport const OptionClickContext = createContext();\r\n\r\nconst Header = () => {\r\n  const [isShowOptionsClicked, setIsShowOptionsClicked] = useState(false);\r\n  const [showVOTD, setShowVOTD] = useState(false);\r\n\r\n  return (\r\n    <div className='header'>\r\n      <OptionClickContext.Provider\r\n        value={{\r\n          showVOTD,\r\n          setShowVOTD,\r\n          isShowOptionsClicked,\r\n          setIsShowOptionsClicked,\r\n        }}\r\n      >\r\n        <BookSelect />\r\n        <div>\r\n          <VOTD />\r\n        </div>\r\n      </OptionClickContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useContext, useEffect } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { BookDataContext } from '../App/App';\r\nimport { PassagePendingContext } from '../App/App';\r\n\r\nconst ScriptureViewLogic = (currentViewingPassageWrapper) => {\r\n  const { isPassagePending, setIsPassagePending } = useContext(\r\n    PassagePendingContext,\r\n  );\r\n\r\n  const { books, displayedBookData, setDisplayedBookData, API_KEY, bibleId } =\r\n    useContext(BookDataContext);\r\n\r\n  const {\r\n    name: currentBookName,\r\n    currentChapter,\r\n    chaptersCount,\r\n  } = displayedBookData;\r\n\r\n  const scrollTop = (scriptureView) => {\r\n    scriptureView.scrollTop = 0;\r\n  };\r\n\r\n  const handlePassageChange = (event) => {\r\n    let { bookIndex } = displayedBookData;\r\n    const target = event.target;\r\n\r\n    if (!target.classList.contains('view-direction')) return false;\r\n\r\n    setIsPassagePending(true);\r\n\r\n    if (target.classList.contains('next')) {\r\n      if (bookIndex === books.length - 1 && currentChapter === chaptersCount) {\r\n        return setIsPassagePending(false);\r\n      }\r\n      nextPassage(displayedBookData, books);\r\n    } else if (target.classList.contains('prev')) {\r\n      if (bookIndex === 0 && currentChapter === 1) {\r\n        return setIsPassagePending(false);\r\n      }\r\n      prevPassage(displayedBookData, books);\r\n    }\r\n  };\r\n\r\n  const nextPassage = (displayedBookData, books) => {\r\n    let { bookIndex } = displayedBookData;\r\n    let newBook = { ...displayedBookData };\r\n\r\n    if (currentChapter < chaptersCount) {\r\n      newBook = { ...newBook, currentChapter: currentChapter + 1 };\r\n    } else if (bookIndex < books.length - 1) {\r\n      newBook = {\r\n        ...newBook,\r\n        bookIndex: bookIndex + 1,\r\n        name: books[bookIndex + 1].passage,\r\n        currentChapter: 1,\r\n        chaptersCount: books[bookIndex + 1].chapters.length,\r\n      };\r\n    }\r\n    setDisplayedBookData(newBook);\r\n  };\r\n\r\n  const prevPassage = (displayedBookData, books) => {\r\n    let { bookIndex } = displayedBookData;\r\n    let newBook = { ...displayedBookData };\r\n\r\n    if (currentChapter > 1) {\r\n      newBook = { ...newBook, currentChapter: currentChapter - 1 };\r\n    } else if (bookIndex > 0) {\r\n      newBook = {\r\n        ...newBook,\r\n        bookIndex: bookIndex - 1,\r\n        name: books[bookIndex - 1].passage,\r\n        currentChapter: books[bookIndex - 1].chapters.length,\r\n        chaptersCount: books[bookIndex - 1].chapters.length,\r\n      };\r\n    }\r\n    setDisplayedBookData(newBook);\r\n  };\r\n\r\n  const url = `https://api.biblia.com/v1/bible/content/${bibleId}.html.json?passage=${currentBookName}${currentChapter}&style=fullyFormatted&key=${API_KEY}`;\r\n  const { data: passageToShow, isPending } = useFetch(url);\r\n\r\n  useEffect(() => {\r\n    if (!passageToShow) return;\r\n    setIsPassagePending(false);\r\n\r\n    if (!currentViewingPassageWrapper.current) return;\r\n    scrollTop(currentViewingPassageWrapper.current);\r\n  }, [passageToShow]);\r\n\r\n  return {\r\n    passageToShow,\r\n    isPending,\r\n    nextPassage,\r\n    prevPassage,\r\n    scrollTop,\r\n    displayedBookData,\r\n    isPassagePending,\r\n    setIsPassagePending,\r\n    handlePassageChange,\r\n  };\r\n};\r\n\r\nexport default ScriptureViewLogic;\r\n","import { useRef } from 'react';\r\nimport ScriptureViewLogic from './ScriptureViewLogic';\r\n\r\nconst ScriptureView = () => {\r\n  const currentViewingPassageWrapper = useRef();\r\n\r\n  const { passageToShow, handlePassageChange } = ScriptureViewLogic(\r\n    currentViewingPassageWrapper,\r\n  );\r\n\r\n  return (\r\n    <div className='scripture-view' onClick={handlePassageChange}>\r\n      <div className='view-direction prev btn'>PREV</div>\r\n      {passageToShow && (\r\n        <div\r\n          className='viewing-passage no-visible-scrollbar'\r\n          ref={currentViewingPassageWrapper}\r\n          dangerouslySetInnerHTML={{ __html: passageToShow.text }}\r\n        ></div>\r\n      )}\r\n      <div className='view-direction next btn'>NEXT</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScriptureView;\r\n","import { createContext, useState } from 'react';\r\nimport AppLogic from './AppLogic';\r\nimport Header from '../Header/Header';\r\nimport ScriptureView from '../ScriptureView/ScriptureView';\r\nimport '../../css/App.css';\r\n\r\nexport const BookDataContext = createContext();\r\nexport const PassagePendingContext = createContext();\r\nexport const SelectedTestContext = createContext();\r\n\r\nconst App = () => {\r\n  const [isPassagePending, setIsPassagePending] = useState(true);\r\n  const { displayedBookData, setDisplayedBookData, books, API_KEY, bibleId } =\r\n    AppLogic();\r\n\r\n  return (\r\n    <>\r\n      {displayedBookData && books && (\r\n        <PassagePendingContext.Provider\r\n          value={{ isPassagePending, setIsPassagePending }}\r\n        >\r\n          <BookDataContext.Provider\r\n            value={{\r\n              displayedBookData,\r\n              setDisplayedBookData,\r\n              books,\r\n              API_KEY,\r\n              bibleId,\r\n            }}\r\n          >\r\n            <Header />\r\n            <ScriptureView />\r\n          </BookDataContext.Provider>\r\n        </PassagePendingContext.Provider>\r\n      )}\r\n      {isPassagePending && <div className='pending'></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}